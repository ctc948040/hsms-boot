WITH RECURSIVE T3 (GRADE_CODE,SUBJECT_CODE,CTG_ID, CTG_NAME, CTG_LEVEL, PARENT_CTG_ID, CTG_SORT, CTG_SORT_) AS
(
	SELECT T1.GRADE_CODE,T1.SUBJECT_CODE,T1.CTG_ID, T1.CTG_NAME, T1.CTG_LEVEL, T1.PARENT_CTG_ID,T1.CTG_SORT, CONVERT(T1.CTG_SORT,CHAR) AS CTG_SORT_
	FROM COM_CATEGORY T1
	WHERE t1.PARENT_CTG_ID  ='ROOT'
	AND GRADE_CODE='COMGRDM2'
	AND SUBJECT_CODE='COMSBJ01'
	
	UNION ALL
	
	SELECT T2.GRADE_CODE,T2.SUBJECT_CODE,T2.CTG_ID, T2.CTG_NAME, T2.CTG_LEVEL, T2.PARENT_CTG_ID,T2.CTG_SORT, CONCAT(T3.CTG_SORT_,'_',LPAD(T2.CTG_SORT,2,'0')) AS  CTG_SORT_
	FROM COM_CATEGORY T2
	INNER JOIN T3 ON T2.PARENT_CTG_ID = T3.CTG_ID
)

SELECT T3.GRADE_CODE,C1.CODE_NAME AS GRADE_NAME,T3.SUBJECT_CODE,C2.CODE_NAME AS SUBJECT_NAME,T3.PARENT_CTG_ID,IFNULL( P.CTG_NAME,'ROOT') AS PARENT_CTG_NAME,T3.CTG_ID,T3.CTG_NAME,T3.CTG_LEVEL,T3.CTG_SORT,T3.CTG_SORT_ FROM T3
LEFT OUTER JOIN COM_CATEGORY P
ON P.CTG_ID = T3.PARENT_CTG_ID
LEFT OUTER JOIN COM_CODE C1
ON C1.CODE_ID = T3.GRADE_CODE
LEFT OUTER JOIN COM_CODE C2
ON C2.CODE_ID = T3.SUBJECT_CODE
ORDER BY T3.CTG_SORT_