<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hsms.mybatis.mapper.CategoryMapper">

	<select id="selectCategory" resultType="Category">
		SELECT * FROM COM_CATEGORY
		WHERE CTG_ID = #{ctgId}
	</select>

	<select id="selectListCategory" resultType="Category">
		SELECT  ctg_name as label,
				ctg_id as id,
				if(ctg_level=1,'https://cdn.quasar.dev/img/boy-avatar.png',null) as  avatar,
				if((select count(*) from COM_CATEGORY where PARENT_CTG_ID = a.CTG_ID ) > 0 and ctg_level>1,	"folder",null) icon,
				"secondary" as color,
				if((select count(*) from COM_CATEGORY where PARENT_CTG_ID = a.CTG_ID ) > 0 and ctg_level>1,	true,false) lazy
		FROM COM_CATEGORY a
		WHERE PARENT_CTG_ID = #{parentCtgId}
		AND GRADE_CODE = #{gradeCode}
		AND SUBJECT_CODE = #{subjectCode}
		AND USE_YN = 'Y'
		ORDER BY CTG_SORT
	</select>
	<select id="selectListCategoryAll" resultType="Category">
		WITH RECURSIVE T3 (GRADE_CODE,SUBJECT_CODE,CTG_ID, CTG_NAME, CTG_LEVEL, PARENT_CTG_ID, CTG_SORT, CTG_SORT_T) AS
		(
			SELECT T1.GRADE_CODE,T1.SUBJECT_CODE,T1.CTG_ID, T1.CTG_NAME, T1.CTG_LEVEL, T1.PARENT_CTG_ID,T1.CTG_SORT, CONVERT(T1.CTG_SORT,CHAR(9999)) AS CTG_SORT_T
			FROM COM_CATEGORY T1
			WHERE t1.CTG_ID  = #{parentCtgId}
			AND GRADE_CODE=#{gradeCode}
			AND SUBJECT_CODE=#{subjectCode}
			
			UNION ALL
			
			SELECT T2.GRADE_CODE,T2.SUBJECT_CODE,T2.CTG_ID, T2.CTG_NAME, T2.CTG_LEVEL, T2.PARENT_CTG_ID,T2.CTG_SORT, CONCAT(T3.CTG_SORT_T,'_',LPAD(T2.CTG_SORT,3,'0')) AS  CTG_SORT_T
			FROM COM_CATEGORY T2
			INNER JOIN T3 ON T2.PARENT_CTG_ID = T3.CTG_ID
		)
		
		SELECT T3.GRADE_CODE,C1.CODE_NAME AS GRADE_NAME,T3.SUBJECT_CODE,C2.CODE_NAME AS SUBJECT_NAME,T3.PARENT_CTG_ID,IFNULL( P.CTG_NAME,'ROOT') AS PARENT_CTG_NAME,T3.CTG_ID,T3.CTG_NAME,T3.CTG_LEVEL,T3.CTG_SORT,T3.CTG_SORT_T 
		FROM T3
		LEFT OUTER JOIN COM_CATEGORY P
		ON P.CTG_ID = T3.PARENT_CTG_ID
		LEFT OUTER JOIN COM_CODE C1
		ON C1.CODE_ID = T3.GRADE_CODE
		LEFT OUTER JOIN COM_CODE C2
		ON C2.CODE_ID = T3.SUBJECT_CODE
		ORDER BY T3.CTG_SORT_T
	</select>
	
	<update id="updateCategory">
		UPDATE COM_CATEGORY
		SET CTG_NAME = #{ctgName},
			PARENT_CTG_ID = (
				SELECT IFNULL( #{parentCtgId},
					( 
						SELECT * FROM (
							SELECT CTG_ID FROM COM_CATEGORY
								WHERE 1=1					
								AND GRADE_CODE = #{gradeCode}
								AND SUBJECT_CODE = #{subjectCode} 
								AND CTG_NAME = #{parentCtgName}
						) AS T 
					)
				) AS CTG_ID FROM DUAL
			 ),
			CTG_LEVEL = ${ctgLevel},
			CTG_SORT  = ${ctgSort},
			UP_DATE = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		WHERE CTG_ID = #{ctgId}
	</update>
	
	<insert id="insertCategory" >
		INSERT INTO COM_CATEGORY(
			CTG_ID,
			CTG_NAME,
			PARENT_CTG_ID,
			CTG_LEVEL,
			CTG_SORT,
			GRADE_CODE,
			SUBJECT_CODE,
			USE_YN,
			IN_DATE
		) (
			SELECT 
				IFNULL(#{ctgId},(SELECT  CONCAT('CTG',HEX(UUID_TO_BIN(UUID(),1))) AS UUID FROM DUAL)), 
				#{ctgName}, 
				IFNULL(#{parentCtgId},(
					SELECT CTG_ID FROM COM_CATEGORY 
					WHERE 1=1					
					AND GRADE_CODE = #{gradeCode}
					AND SUBJECT_CODE = #{subjectCode} 
					AND CTG_NAME = #{parentCtgName}
				)), 
				#{ctgLevel}, 
				#{ctgSort},
				#{gradeCode},
				#{subjectCode},
				'Y',
				DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		  	FROM DUAL
		) 
		<!-- ON DUPLICATE KEY UPDATE
			CTG_NAME = #{ctgName},
			PARENT_CTG_ID = IFNULL(#{parentCtgId},(
				SELECT CTG_ID FROM COM_CATEGORY 
				WHERE 1=1					
				AND GRADE_CODE = #{gradeCode}
				AND SUBJECT_CODE = #{subjectCode} 
				AND CTG_NAME = #{parentCtgName}
			)),
			CTG_LEVEL = #{ctgLevel},
			CTG_SORT  = #{ctgSort} -->
			<!-- ,UP_DATE = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') -->			
	</insert>

</mapper>